name: CI

on:
  push:
    branches: ["main"]
  pull_request_target:
    branches: ["main"]
  workflow_dispatch:

jobs:
  ci:
    concurrency:
      group: "ci-${{ github.ref }}"
      cancel-in-progress: true
    runs-on: macos-latest # pagefind not working on x64 architecture
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha || github.sha }}
        lfs: true
    
    - name: Check Project Node version
      id: check-node-version
      run: echo "node_version=$(jq -r ".volta.node" package.json)" >> $GITHUB_OUTPUT

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.check-node-version.outputs.node_version }}
        cache: npm

    - name: Run npm ci
      run: npm ci

    - name: Get GitHub App Token
      if: github.event_name == 'pull_request_target'
      uses: actions/create-github-app-token@v1
      id: github-app
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Textlint to PR
      if: github.event_name == 'pull_request_target'
      uses: tsuyoshicho/action-textlint@v3
      with:
        github_token: ${{ steps.github-app.outputs.token }}
        reporter: github-pr-review
        textlint_flags: "src/content/**"
        fail_on_error: true

    - name: Run astro check
      run: npm run check

    - name: Run astro build
      run: npm run build
      env:
        RAKUTEN_APPLICATION_ID:  ${{ secrets.RAKUTEN_APPLICATION_ID }}
        RAKUTEN_AFFILIATE_ID:  ${{ secrets.RAKUTEN_AFFILIATE_ID }}

    - name: Set Deploy parameter
      id: set-option-value
      run: |
        if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
          echo "production_deploy=false" >> $GITHUB_OUTPUT
        else
          echo "production_deploy=true" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './dist'
        production-deploy: ${{ steps.set-option-value.outputs.production_deploy }}
        github-token: ${{ github.token }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
